空间资产管理系统
一、项目简介
本项目是基于南京大学鼓楼校区的空间资产管理系统，旨在提供一个直观的平台，用于管理和展示校园内的空间资产信息，便于用户查询和管理部门使用。系统采用分层架构设计，主要包括控制层（Controller）、服务层（Service）、数据访问层（DAO）、实体层（Entity）和数据传输对象层（DTO）。
二、架构设计
1. 分层架构
系统采用分层架构设计，主要包括以下层次：
控制层（Controller）：负责处理HTTP请求，调用服务层接口，并将结果返回给前端。
服务层（Service）：处理业务逻辑，调用数据访问层接口，提供业务数据给控制层。
数据访问层（DAO）：负责与数据库交互，执行数据的增删改查操作。
实体层（Entity）：映射数据库表结构，表示系统中的实体对象。
数据传输对象层（DTO）：用于在服务层和控制层之间传递数据，避免直接暴露实体类。
2. 系统架构图
+-------------------+ | Application Layer | | (Controller) | +---------+---------+ | v +---------+---------+ | Service Layer | | (Business Logic)| +---------+---------+ | v +---------+---------+ | Data Layer | | (DAO) | +-------------------+
三、模块设计
1. 用户管理模块
功能：处理用户登录、注册和权限管理。
接口：
POST /api/user/register：用户注册。
POST /api/user/login：用户登录。
GET /api/user/{userId}：获取用户信息。
2. 校园管理模块
功能：提供校园总图数据，包括建筑信息、地块分区等。
接口：
GET /api/campus/{campusId}：获取校园信息。
GET /api/campus/{campusId}/plots：获取校园地块信息。
3. 楼栋管理模块
功能：提供建筑基础信息、功能分区、楼层信息等。
接口：
GET /api/building/{buildingId}/basicInfo：获取楼栋基础信息。
GET /api/building/{buildingId}/heritageStatus：获取文保建筑信息。
GET /api/building/{buildingId}/civilDefenseFacility：获取人防设施信息。
4. 房间管理模块
功能：提供房间详细信息、功能用途、运维记录等。
接口：
GET /api/room/{roomId}/basicInfo：获取房间基础信息。
GET /api/room/{roomId}/maintenanceRecords：获取运维记录。
5. 设施管理模块
功能：提供设施信息，包括变电所、楼层配电间、停车场、人防设施等。
接口：
GET /api/substation/{substationId}/energyEfficiency：获取配电房能耗信息。
GET /api/device/{deviceId}/maintenanceInfo：获取设备维保信息。
6. 运维管理模块
功能：提供运维记录、问题判断与指引等。
接口：
GET /api/room/{roomId}/problemGuidance：获取问题判断与指引。
GET /api/maintenance/feedback/{feedbackId}：获取反馈检查信息。
四、技术选型
前端框架： React.js
后端框架：Spring Boot
数据库：
关系型数据库：MySQL
非关系型数据库：MongoDB
数据缓存：Redis
数据可视化：ECharts 或 D3.js
地图嵌入：通过 iframe 标签嵌入外部二维或三维地图服务（如 ArcGIS、Cesium.js 等）
五、数据模型设计
1. 核心实体及属性
校园
属性：校园名称、地理位置、总平面图、三维模型
地块
属性：地块编号、地块名称、位置、面积、（用地红线、主要建筑、道路系统）
楼栋
属性：楼栋编号、楼栋名称、建筑用途、建设年代、竣工时间、层数、建筑规模、是否文保建筑、总用电负荷
楼层
属性：楼层编号、楼层平面图、层高、荷载、机电支持条件、建设时间、改造时间
房间
属性：房间编号、房间名称、房间用途、功能描述、面积、层高、荷载、机电支持条件、建设时间、改造时间、管理归属部门
功能分区
属性：分区类型（如教学空间、重荷载空间、高通风要求空间等）、分区名称、位置、面积、功能描述
防火分区
属性：分区编号、位置、面积、防火等级、防火设施
设施
属性：设施编号、设施名称、位置、类型（如配电房、人防设施等）、规模、配置信息
变电所
属性：变电所名称、位置、建设投运时间、总装机容量、变压器负载率、主要元器件、改造大修情况
楼层配电间
属性：楼层、平均参考值（KW）、可研用电负荷可承载范围（KW）、楼层用电负荷设计值（KW）、可支持用电负荷、现场实际运行数据
建设信息
属性：立项信息、基本建设信息、归档信息、运维标准状态、房屋基本信息、关键设备维保讯息
运维信息
属性：基本运维信息、后期运维、定期反馈检查、维修记录、问题判断与指引、使用方评价
2. 实体关系
地块和楼栋：具有所属关系
楼栋和楼层、房间：具有所属关系
设施：分布在地块或楼栋中，具有位置和配置信息
楼栋：包含一个或多个变电所，一个变电所为多个楼层配电间供电
房间：具有建设信息，建设信息与房间一一对应
房间：具有运维信息，运维信息与房间一一对应
房间：具有功能用途，功能用途与房间一一对应

六、开发指南
1. 代码规范
使用 Lombok 简化代码
遵循 Spring Boot 的最佳实践
使用 Swagger 文档注解生成 API 文档
2. 数据库设计
使用 MySQL 设计关系型数据库表
使用 MongoDB 存储非关系型数据

3. 安全性
使用 Spring Security 实现用户认证和授权
使用 JWT 令牌进行身份验证
对敏感数据进行加密存储
八、测试指南
1. 单元测试
使用 JUnit 和 Mockito 编写单元测试
测试控制器、服务层和数据访问层
2. 集成测试
使用 Spring Boot Test 编写集成测试
测试整个系统的功能
